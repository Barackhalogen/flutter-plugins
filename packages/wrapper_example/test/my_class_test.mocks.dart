// Mocks generated by Mockito 5.3.0 from annotations
// in wrapper_example/test/my_class_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:mockito/mockito.dart' as _i1;

import 'test_example_library.pigeon.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [TestMyClassHostApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockTestMyClassHostApi extends _i1.Mock
    implements _i2.TestMyClassHostApi {
  MockTestMyClassHostApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void create(
          int? identifier, String? primitiveField, int? classFieldIdentifier) =>
      super.noSuchMethod(
          Invocation.method(
              #create, [identifier, primitiveField, classFieldIdentifier]),
          returnValueForMissingStub: null);
  @override
  void myStaticMethod() =>
      super.noSuchMethod(Invocation.method(#myStaticMethod, []),
          returnValueForMissingStub: null);
  @override
  void myMethod(
          int? identifier, String? primitiveParam, int? classParamIdentifier) =>
      super.noSuchMethod(
          Invocation.method(
              #myMethod, [identifier, primitiveParam, classParamIdentifier]),
          returnValueForMissingStub: null);
  @override
  void attachClassField(int? identifier, int? classFieldIdentifier) =>
      super.noSuchMethod(
          Invocation.method(
              #attachClassField, [identifier, classFieldIdentifier]),
          returnValueForMissingStub: null);
}

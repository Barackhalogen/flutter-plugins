// Mocks generated by Mockito 5.1.0 from annotations
// in webview_flutter_platform_interface/test/src/v4/webview_platform_test.dart.
// Do not manually edit this file.

import 'package:flutter/foundation.dart' as _i8;
import 'package:flutter/gestures.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:webview_flutter_platform_interface/src/v4/navigation_callback_handler_delegate.dart'
    as _i3;
import 'package:webview_flutter_platform_interface/src/v4/types/types.dart'
    as _i4;
import 'package:webview_flutter_platform_interface/src/v4/webview_controller_delegate.dart'
    as _i5;
import 'package:webview_flutter_platform_interface/src/v4/webview_cookie_manager_delegate.dart'
    as _i2;
import 'package:webview_flutter_platform_interface/src/v4/webview_platform.dart'
    as _i7;
import 'package:webview_flutter_platform_interface/src/v4/webview_widget_delegate.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeWebViewCookieManagerDelegate_0 extends _i1.Fake
    implements _i2.WebViewCookieManagerDelegate {}

class _FakeNavigationCallbackHandlerDelegate_1 extends _i1.Fake
    implements _i3.NavigationCallbackHandlerDelegate {}

class _FakeJavaScriptMessage_2 extends _i1.Fake
    implements _i4.JavaScriptMessage {}

class _FakeWebSettingsDelegate_3 extends _i1.Fake
    implements _i4.WebSettingsDelegate {}

class _FakeWebViewControllerDelegate_4 extends _i1.Fake
    implements _i5.WebViewControllerDelegate {}

class _FakeWebViewWidgetDelegate_5 extends _i1.Fake
    implements _i6.WebViewWidgetDelegate {}

/// A class which mocks [WebViewPlatform].
///
/// See the documentation for Mockito's code generation for more information.
class MockWebViewPlatform extends _i1.Mock implements _i7.WebViewPlatform {
  MockWebViewPlatform() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.WebViewCookieManagerDelegate createCookieManagerDelegate() =>
      (super.noSuchMethod(Invocation.method(#createCookieManagerDelegate, []),
              returnValue: _FakeWebViewCookieManagerDelegate_0())
          as _i2.WebViewCookieManagerDelegate);
  @override
  _i3.NavigationCallbackHandlerDelegate
      createNavigationCallbackHandlerDelegate() => (super.noSuchMethod(
              Invocation.method(#createNavigationCallbackHandlerDelegate, []),
              returnValue: _FakeNavigationCallbackHandlerDelegate_1())
          as _i3.NavigationCallbackHandlerDelegate);
  @override
  _i4.JavaScriptMessage createJavaScriptMessage(String? message) => (super
      .noSuchMethod(Invocation.method(#createJavaScriptMessage, [message]),
          returnValue: _FakeJavaScriptMessage_2()) as _i4.JavaScriptMessage);
  @override
  _i4.WebSettingsDelegate createWebSettingsDelegate(
          {bool? allowsInlineMediaPlayback,
          bool? debuggingEnabled,
          bool? gestureNavigationEnabled,
          bool? hasNavigationDelegate,
          bool? hasProgressTracking,
          _i4.JavaScriptMode? javaScriptMode,
          _i4.WebSetting<String>? userAgent,
          bool? zoomEnabled}) =>
      (super.noSuchMethod(
              Invocation.method(#createWebSettingsDelegate, [], {
                #allowsInlineMediaPlayback: allowsInlineMediaPlayback,
                #debuggingEnabled: debuggingEnabled,
                #gestureNavigationEnabled: gestureNavigationEnabled,
                #hasNavigationDelegate: hasNavigationDelegate,
                #hasProgressTracking: hasProgressTracking,
                #javaScriptMode: javaScriptMode,
                #userAgent: userAgent,
                #zoomEnabled: zoomEnabled
              }),
              returnValue: _FakeWebSettingsDelegate_3())
          as _i4.WebSettingsDelegate);
  @override
  _i5.WebViewControllerDelegate createWebViewControllerDelegate(
          _i4.WebViewControllerCreationParams? params) =>
      (super.noSuchMethod(
              Invocation.method(#createWebViewControllerDelegate, [params]),
              returnValue: _FakeWebViewControllerDelegate_4())
          as _i5.WebViewControllerDelegate);
  @override
  _i6.WebViewWidgetDelegate createWebViewWidgetDelegate(
          {_i8.Key? key,
          _i5.WebViewControllerDelegate? controller,
          Set<_i8.Factory<_i9.OneSequenceGestureRecognizer>>?
              gestureRecognizers}) =>
      (super.noSuchMethod(
              Invocation.method(#createWebViewWidgetDelegate, [], {
                #key: key,
                #controller: controller,
                #gestureRecognizers: gestureRecognizers
              }),
              returnValue: _FakeWebViewWidgetDelegate_5())
          as _i6.WebViewWidgetDelegate);
}
